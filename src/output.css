/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
.relative {
  position: relative;
}
.mx-auto {
  margin-inline: auto;
}
.flex {
  display: flex;
}
.inline-block {
  display: inline-block;
}
.h-auto {
  height: auto;
}
.min-h-screen {
  min-height: 100vh;
}
.w-1\/5 {
  width: calc(1/5 * 100%);
}
.w-\[90\%\] {
  width: 90%;
}
.max-w-\[1200px\] {
  max-width: 1200px;
}
.flex-grow {
  flex-grow: 1;
}
.list-inside {
  list-style-position: inside;
}
.list-disc {
  list-style-type: disc;
}
.list-none {
  list-style-type: none;
}
.flex-col {
  flex-direction: column;
}
.flex-wrap {
  flex-wrap: wrap;
}
.items-center {
  align-items: center;
}
.justify-center {
  justify-content: center;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.text-center {
  text-align: center;
}
.no-underline {
  text-decoration-line: none;
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-colors {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-transform {
  transition-property: transform, translate, scale, rotate;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.duration-300 {
  --tw-duration: 300ms;
  transition-duration: 300ms;
}
.after\:mx-auto {
  &::after {
    content: var(--tw-content);
    margin-inline: auto;
  }
}
.after\:block {
  &::after {
    content: var(--tw-content);
    display: block;
  }
}
.after\:h-\[3px\] {
  &::after {
    content: var(--tw-content);
    height: 3px;
  }
}
.after\:w-3\/5 {
  &::after {
    content: var(--tw-content);
    width: calc(3/5 * 100%);
  }
}
.after\:rounded-full {
  &::after {
    content: var(--tw-content);
    border-radius: calc(infinity * 1px);
  }
}
.after\:content-\[\'\'\] {
  &::after {
    content: var(--tw-content);
    --tw-content: '';
    content: var(--tw-content);
  }
}
.hover\:scale-110 {
  &:hover {
    @media (hover: hover) {
      --tw-scale-x: 110%;
      --tw-scale-y: 110%;
      --tw-scale-z: 110%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
}
.hover\:underline {
  &:hover {
    @media (hover: hover) {
      text-decoration-line: underline;
    }
  }
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-duration: initial;
      --tw-content: "";
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
    }
  }
}

h2.relative::after {
  content: "";
  display: block;
  width: 60%;
  height: 0.25rem; /* 4px */
  background-color: #2563eb; /* Tailwind blue-600 */
  border-radius: 0.375rem; /* rounded */
  margin: 0.5rem auto 0;
}
